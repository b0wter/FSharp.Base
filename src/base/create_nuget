#!/usr/bin/env bash
rm b0wter.fsharp.nuspec
set -e

if [ -z "$NUGET_ORG_KEY" ]
then
	echo "\$NUGET_ORG_KEY is empty"
	echo "Trying to source 'nuget-org-key'."
	NUGET_ORG_KEY=$(head -1 nuget-org-key)
	echo "Sourced nuget key."
else
	echo "\$NUGET_ORG_KEY is set, no need to do anything"
fi

GIT_TAG=$(git describe --tags --abbrev=0)
GIT_TAG=$(echo "${GIT_TAG//v}")
GIT_MESSAGE=$(sed 's/ /\\ /g' <<< $(git log -1 --pretty=%B | tr '\n' ' '))
echo "Latest tag: $GIT_TAG; Latest commit: $GIT_MESSAGE"
echo "Creating temporary nuspec file from template."
sed "s/%VERSION%/$GIT_TAG/g" b0wter.fsharp.nuspec.template > b0wter.fsharp.nuspec
sed -i 's/%RELEASE_NOTES%/'"$GIT_MESSAGE"'/g' b0wter.fsharp.nuspec

echo "Deleting obj and bin folders."
rm -rf bin obj lib 		>> create_nuget.log 2>&1
set -e
echo "Cleaning project."
dotnet clean 			>> create_nuget.log 2>&1
echo "Restoring projects."
dotnet restore 			>> create_nuget.log 2>&1
echo "Building release."
dotnet build -c "Release" 	>> create_nuget.log 2>&1
echo "Running tests."
cd ../..
dotnet test 		
cd -
echo "Packing release."
dotnet pack -c "Release" 	
echo "Pushing to nuget.org"
dotnet nuget push lib/Release/b0wter.FSharp.*.nupkg -k $NUGET_ORG_KEY -s https://api.nuget.org/v3/index.json | tee create_nuget.log
